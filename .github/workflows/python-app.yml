name: Application Tests

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Debug before Tests
        run: |
          ls
          sudo apt-get install rar unrar
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest (test_concurrent_models.py)
        working-directory: tests
        run: |
          pytest test_concurrent_models.py
      - name: Test with pytest (test_filter.py)
        working-directory: tests
        run: |
          pytest test_filter.py
      - name: Test with pytest (test_application.py)
        working-directory: tests
        run: |
          pytest test_application.py
      - name: Debug after Tests
        run: |
          mv logfile.log TestOutputs
          mv output TestOutputs
          ls
      - name: Upload specified folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: TestOutPuts Folder
          path: ./TestOutputs/
