name: Application Tests

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Debug
      run: ls
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest (test_setup.py)
      working-directory: Testing_Only
      run: |
        pytest test_setup.py --junitxml=junit/test-setup-results.xml
    - name: Test with pytest (test_concurrent_model.py)
      working-directory: Testing_Only
      run: |
        pytest test_concurrent_model.py --junitxml=junit/test-concurrent-model-results.xml
    - name: Test with pytest (test_producer_consumer.py)
      working-directory: Testing_Only
      run: |
        pytest test_producer_consumer.py --junitxml=junit/test-producer-consumer-results.xml
    - name: Test with pytest (test_filter.py)
      working-directory: Testing_Only
      run: |
        pytest test_filter.py --junitxml=junit/test-filter-results.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
    # Upload the specified folder as an artifact
    - name: Upload specified folder as artifact
      uses: actions/upload-artifact@v3
      with:
        name: OutPuts Folder
        path: Outputs